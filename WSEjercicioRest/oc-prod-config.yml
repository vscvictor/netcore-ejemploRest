apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: wsejerciciorest
  name: wsejerciciorest
  namespace: clientes  
spec:
  lookupPolicy:
    local: false
status:
  dockerImageRepository: docker-registry.default.svc:5000/clientes/wsejerciciorest
  
---
apiVersion: v1
kind: Secret
metadata:
  name: ConexionServicioSipecom
type: Opaque 
stringData:
  OPENSHIFT-SEG-API-URL-SIPECOM: __OPENSHIFT-SEG-API-URL-SIPECOM__
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:      
  labels:
    app: wsejerciciorest
  name: wsejerciciorest
  namespace: clientes    
spec:
  replicas: 14
  selector:
    deploymentconfig: wsejerciciorest
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:      
      labels:
        app: wsejerciciorest
        deploymentconfig: wsejerciciorest
    spec:
      containers:      
      - env:
        - name : TZ
          value: America/Guayaquil
        - name: tcs.provider.id.default
          valueFrom:
            secretKeyRef:
              key: tcs.provider.id.default
              name: tcs.provider.id.default
        - name : OPENSHIFT-SEG-API-URL-SIPECOM
          valueFrom:
            secretKeyRef:
              name: ConexionServicioSipecom
              key: OPENSHIFT-SEG-API-URL-SIPECOM
        image: docker-registry.default.svc:5000/clientes/wsejerciciorest
        imagePullPolicy: Always
        name: wsejerciciorest
        readinessProbe: 
          httpGet:   
            path: /api/v1/ServicioBase/HealthChecksServicio
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 4
        livenessProbe: 
          httpGet:   
            path: /api/v1/ServicioBase/HealthChecks
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 4
        ports:
        - containerPort: 8080
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 100Mi        
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/app-root/configs/centralizada
          name: volume-centralizada
        - mountPath: /opt/app-root/configs/catalogo
          name: volume-catalogo
        - mountPath: /opt/app-root/configs/logs
          name: volume-logs
        - mountPath: /opt/app-root/configs/servicio
          name: volume-servicio
        - mountPath: /opt/app-root/app/SecurityConfig
          name: volume-security
        - mountPath: /opt/app-root/app/xml
          name: volume-xml
        - mountPath: /opt/app-root/logs
          name: persistent-logs
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: centralizada
        name: volume-centralizada
      - configMap:
          defaultMode: 420
          name: catalogos
        name: volume-catalogo
      - configMap:
          defaultMode: 420
          name: logconfiguracion
        name: volume-logs
      - configMap:
          defaultMode: 420
          name: wsejerciciorest
        name: volume-servicio
      - configMap:
          defaultMode: 420
          name: tcs-provider-config
        name: volume-security
      - configMap:
          defaultMode: 420
          name: tcs-bancs-clientserver
        name: volume-xml
      - persistentVolumeClaim:
          claimName: netcore-logs-clientes-claim
        name: persistent-logs  
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - wsejerciciorest
        from:
          kind: ImageStreamTag
          name: 'wsejerciciorest:latest'
          namespace: clientes
      type: ImageChange
    - type: ConfigChange
  test: false
---
apiVersion: v1
kind: Service
metadata:    
  labels:
    app: wsejerciciorest
  name: wsejerciciorest
  namespace: clientes    
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deploymentconfig: wsejerciciorest
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:    
  labels:
    app: wsejerciciorest
  name: wsejerciciorest
  namespace: clientes    
spec:
  host: wsejerciciorest-clientes.apps.prod.bpichincha.com
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: wsejerciciorest
    weight: 100
  wildcardPolicy: None